ARG APP_PATH = /apollo
ARG APP_NAME = gql-book
ARG APP_VERSION = 0.0.1
ARG APP_IMAGE = ${ APP_NAME } : ${ APP_VERSION }
ARG DOCKER_REGISTRY = docker.io
ARG APP_IMAGE_TAG = ${ APP_IMAGE } - ${ DOCKER_REGISTRY }
ARG APP_IMAGE_TAG_LATEST = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest
ARG APP_IMAGE_TAG_VERSION = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } : ${ APP_VERSION }
ARG APP_IMAGE_TAG_LATEST_VERSION = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest- ${ APP_VERSION }
ARG APP_IMAGE_TAG_LATEST_VERSION_SHA = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest- ${ APP_VERSION } - ${ GITHUB_SHA :: 7 }
ARG APP_IMAGE_TAG_LATEST_VERSION_SHA_BRANCH = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest- ${ APP_VERSION } - ${ GITHUB_SHA :: 7 } - ${ GITHUB_REF :: 11 }    
ARG APP_IMAGE_TAG_LATEST_VERSION_SHA_BRANCH_TAG = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest- ${ APP_VERSION } - ${ GITHUB_SHA :: 7 } - ${ GITHUB_REF :: 11 } - ${ GITHUB_REF_TAG :: 11 }
ARG APP_IMAGE_TAG_LATEST_VERSION_SHA_BRANCH_TAG_PR = ${ APP_IMAGE } - ${ DOCKER_REGISTRY } :latest- ${ APP_VERSION } - ${ GITHUB_SHA :: 7 } - ${ GITHUB_REF :: 11 } - ${ GITHUB_REF_TAG :: 11 } - ${ GITHUB_HEAD_REF :: 11 } - ${ GITHUB_BASE_REF :: 11 } - ${ GITHUB_EVENT_NUMBER :: 11 } dest

FROM ${ DOCKER_REGISTRY } / ${ APP_NAME } / ${ APP_NAME } : ${ APP_VERSION } - ${ DOCKER_REGISTRY } AS release
ARG APP_PATH

user root

WORKDIR /the/workdir/${APP_PATH}

COPY \
    ./${APP_PATH} \
    /the/workdir/${APP_PATH}

run turbo build

user node

ENV APP_PORT 4001

EXPOSE ${APP_PORT}

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

ARG NODE_CONFIG_DIR=/the/workdir/${APP_PATH}/config
ENV NODE_CONFIG_DIR=${NODE_CONFIG_DIR}

ARG TAG_NAME
ENV TAG_NAME=${TAG_NAME}

CMD [ "node", "-r", "esm", "--max-http-header-size", "32768", "src/index.js" ]



