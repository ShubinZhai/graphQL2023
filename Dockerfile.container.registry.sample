

FROM node:12.16.1-alpine3.9
RUN npm install -g pnpm
RUN npm install -g turbo

USER root

ENV TERM=xterm-256color
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
ENV PATH=$PATH:/home/node/.npm-global/bin

RUN mkdir -p /usr/src/app
COPY ./auth/* /usr/src/app/auth

# get around local proxy to prevent intercepting http/https traffic
RUN  --mount=type=cache,target=var/cache/apk\
    set -eux && \
    && export \
    http_proxy = http:\\proxy.example.com:8080 \
    https_proxy = https:\\proxy.example.com:8080 \
    && apk add somecertificate \
    && rm existing certificate \
    &&chmod 644 certdirctory \
    && cp certpath to certdirectory \
    && unset http_proxy https_proxy
    

RUN --mount=type=secret,id=auth,dst=/usr/src/app/auth/credentials.json \
    --mount=type=secret,id=auth,dst=/usr/src/app/auth/token.json \
    cd /usr/src/app/auth && \
    npm install && \
    npm run build
RUN --mount=type=cahe,target=/var/cache/apk \
    set -eux && \
    ln -vs /usr/bin/python3 /usr/bin/python && \
    apk add --no-cache --virtual .build-deps \
    coreutils \
    gcc \
    g++ \
    make \
    python3 \
    && npm install -g --unsafe-perm=true --allow-root \
    && apk del .build-deps

# Create app directory
RUN set -eux \
    mkdir -p /usr/src/app \
    && chown -R node:node /usr/src/app \
    /usr/src/app

# COPY files, note package.json and package-lock.json before other files
WORKDIR /usr/src/app
COPY --chown=node:node . /usr/src/app
COPY ./auth/* /usr/src/app/auth

# Install app dependencies
COPY package*.json ./
RUN pnpm install

# Bundle app source
RUN turbo build






